@model IEnumerable<Fleet_Management.VehicleInformationDto>

@{
    ViewData["Title"] = "Detailed Fleet Vehicles";
}
<style>
    .btn-success {
        background-color: #004D4D; 
    }

    .btn-primary {
        background-color: #429690; 
    }

    .btn-secondary {
        background-color: #6c757d; 
    }

    .modal-content {
        padding: 20px; 
    }

    .form-group {
        margin-bottom: 15px; 
    }

    .modal-header {
        background-color: #f8f9fa; 
    }

    .small-button {
        width: 250px; 
        margin-top: 20px; 
        margin-bottom: 1px;
        margin-left: 20px;
        font-size: 18px; 
        line-height: 1; 
    }

</style>
<div class="card mb-4">
   
    <div class="card-header">
    
    <h4>@ViewData["Title"]</h4>
</div>
<button type="button" class="btn btn-success small-button" data-toggle="modal" data-target="#addVehicleModal">
    <i class="fas fa-plus-circle"></i> Add New Vehicle Information
</button>
<!-- Modal -->
<div class="modal fade" id="addVehicleModal" tabindex="-1" role="dialog" aria-labelledby="addVehicleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVehicleModalLabel">Add New Vehicle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addVehicleInfoForm">
                    <div class="form-group">
                        <label for="vehicleNumber">Vehicle Number</label>
                        <input type="number" class="form-control" id="vehicleNumber" name="vehicleNumber" required>
                    </div>
                    <div class="form-group">
                        <label for="vehicleType">Vehicle Type</label>
                        <input type="text" class="form-control" id="vehicleType" name="vehicleType" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add Vehicle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




    <div class="card-body p-5">
        <div class="table-responsive">
            <table id="vehicleInfoTable" class="table table-striped table-hover table-bordered">
                <thead>
                    <tr>
                        <th>Vehicle ID</th>
                        <th>Driver Name</th>
                        <th>Vehicle Make</th>
                        <th>Vehicle Model</th>
                        <th>Purchase Date</th>
                        <th>Last GPS Speed</th>
                        <th>Last Address</th>
                        <th>Last GPS Time</th>
                        <th>Last Position (Latitude, Longitude)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="updateVehicleModal" tabindex="-1" role="dialog" aria-labelledby="updateVehicleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateVehicleModalLabel">Update Vehicle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateVehicleInfoForm">
                    <input type="hidden" id="modalVehicleID" name="vehicleID">
                    <div class="form-group">
                        <label for="updateVehicleNumber">Vehicle Number</label>
                        <input type="number" class="form-control" id="updateVehicleNumber" name="vehicleNumber" required>
                    </div>
                    <div class="form-group">
                        <label for="updateVehicleType">Vehicle Type</label>
                        <input type="text" class="form-control" id="updateVehicleType" name="vehicleType" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table me-1"></i>
        Document text vs JSON Comparison
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="comparisonTable" class="table table-striped table-hover table-bordered">
                <thead>
                    <tr>
                        <th>Document text</th>
                        <th>Returned JSON Value (What is shown when examined in Postman)</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <pre id="specificationField">
1. VehicleNumber
2. VehicleType
3. DriverName
4. PhoneNumber
5. LastPosition (Latitude and Longitude separated by a comma)
6. VehicleMake
7. VehicleModel
8. LastGPSTime
9. LastGPSSpeed
10. LastAddress
11. PurchaseDate
                            </pre>
                        </td>
                        <td>
                            <pre id="jsonDataDisplay"></pre>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="container mt-4">
    <h2>Add New Vehicle Information</h2>
    <form id="addVehicleInfoForm">
        <div class="form-group">
            <label>Vehicle ID</label>
            <input type="number" class="form-control" name="vehicleID" required>
        </div>
        <div class="form-group">
            <label>Vehicle number</label>
            <input type="number" class="form-control" name="vehicleNumber" required>
        </div>
        <div class="form-group">
            <label>Vehicle type</label>
            <input type="text" class="form-control" name="vehicleType" required>
        </div>
        <div class="form-group">
            <label>Vehicle Make</label>
            <input type="text" class="form-control" name="vehicleMake" required>
        </div>
        <div class="form-group">
            <label>Vehicle Model</label>
            <input type="text" class="form-control" name="vehicleModel" required>
        </div>
        <div class="form-group">
            <label>Purchase Date</label>
            <input type="datetime-local" class="form-control" name="purchaseDate" required>
        </div>
        <div class="form-group">
            <label>Driver ID</label>
            <input type="number" class="form-control" name="driverID" required>
        </div>
        <div class="form-group">
            <label>Driver Name</label>
            <input type="text" class="form-control" name="driverName" required>
        </div>
        <div class="form-group">
            <label>Phone Number</label>
            <input type="text" class="form-control" name="phoneNumber" required>
        </div>
        <button type="submit" class="btn btn-primary">Add Vehicle Information</button>
    </form>
</div>
<div class="modal fade" id="updateVehicleModal" tabindex="-1" role="dialog" aria-labelledby="updateVehicleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateVehicleModalLabel">Update Vehicle Information</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateVehicleInfoForm">
                    <div class="form-group">
                        <label for="vehicleID">Vehicle ID</label>
                        <input type="number" class="form-control" id="vehicleID" name="vehicleID" required readonly>
                    </div>
                    <div class="form-group">
                        <label for="vehicleNumber">Vehicle Number</label>
                        <input type="text" class="form-control" id="vehicleNumber" name="vehicleNumber" required>
                    </div>
                    <div class="form-group">
                        <label for="vehicleType">Vehicle Type</label>
                        <input type="text" class="form-control" id="vehicleType" name="vehicleType" required>
                    </div>
                    <div class="form-group">
                        <label for="vehicleMake">Vehicle Make</label>
                        <input type="text" class="form-control" id="vehicleMake" name="vehicleMake" required>
                    </div>
                    <div class="form-group">
                        <label for="vehicleModel">Vehicle Model</label>
                        <input type="text" class="form-control" id="vehicleModel" name="vehicleModel" required>
                    </div>
                    <div class="form-group">
                        <label for="purchaseDate">Purchase Date</label>
                        <input type="datetime-local" class="form-control" id="purchaseDate" name="purchaseDate" required>
                    </div>
                    <div class="form-group">
                        <label for="driverID">Driver ID</label>
                        <input type="number" class="form-control" id="driverID" name="driverID" required>
                    </div>
                    <div class="form-group">
                        <label for="driverName">Driver Name</label>
                        <input type="text" class="form-control" id="driverName" name="driverName" required>
                    </div>
                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" name="phoneNumber" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        function openUpdateModal(vehicleId, vehicleNumber, vehicleType, vehicleMake, vehicleModel, purchaseDate, driverId, driverName, phoneNumber) {
            document.getElementById('modalVehicleID').value = vehicleId;
            document.getElementById('vehicleNumber').value = vehicleNumber;
            document.getElementById('vehicleType').value = vehicleType;
            document.getElementById('vehicleMake').value = vehicleMake;
            document.getElementById('vehicleModel').value = vehicleModel;
            document.getElementById('purchaseDate').value = purchaseDate;
            document.getElementById('driverID').value = driverId;
            document.getElementById('driverName').value = driverName;
            document.getElementById('phoneNumber').value = phoneNumber;
            document.getElementById('lastGPSSpeed').value = lastGPSSpeed;
            document.getElementById('lastAddress').value = lastAddress;
            document.getElementById('lastGPSTime').value = lastGPSTime;
            document.getElementById('lastPosition').value = lastPosition;          
             
            $('#updateVehicleModal').modal('show'); 
        }
        function openUpdateModal(vehicle) {
            document.getElementById('vehicleID').value = vehicle.VehicleID;
            document.getElementById('vehicleNumber').value = vehicle.VehicleNumber;
            document.getElementById('vehicleType').value = vehicle.VehicleType;
            document.getElementById('vehicleMake').value = vehicle.VehicleMake;
            document.getElementById('vehicleModel').value = vehicle.VehicleModel;
            document.getElementById('purchaseDate').value = vehicle.PurchaseDate;
            document.getElementById('driverID').value = vehicle.DriverID;
            document.getElementById('driverName').value = vehicle.DriverName;
            document.getElementById('phoneNumber').value = vehicle.PhoneNumber;

            $('#updateVehicleModal').modal('show');
        }
   
        function editVehicle(vehicleId) {
           
            fetch(`/api/VehicleInformation/${vehicleId}`)
                .then(response => response.json())
                .then(data => {
                
                    const form = document.getElementById('updateVehicleInfoForm');
                    form.elements['vehicleID'].value = data.VehicleID;
                    form.elements['vehicleNumber'].value = data.VehicleNumber;
                    form.elements['vehicleType'].value = data.VehicleType;
                    form.elements['vehicleMake'].value = data.VehicleMake;
                    form.elements['vehicleModel'].value = data.VehicleModel;
                    form.elements['purchaseDate'].value = new Date(data.PurchaseDate).toISOString().slice(0, 16); // Assumes input type="datetime-local"
                    form.elements['driverID'].value = data.DriverID;
                    form.elements['driverName'].value = data.DriverName;
                    form.elements['phoneNumber'].value = data.PhoneNumber;
                    form.elements['lastGPSSpeed'].value = data.lastGPSSpeed;
                    form.elements['lastAddress'].value = data.lastAddress;
                    form.elements['lastGPSTime'].value = data.lastGPSTime;
                    form.elements['lastPosition'].value = data.lastPosition;
                                  })
                .catch(error => {
                    console.error('Failed to fetch vehicle details:', error);
                    alert(`Failed to load vehicle information for editing: ${error.message}`);
                });
        }
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('updateVehicleInfoForm');

            form.addEventListener('submit', function (event) {
                event.preventDefault();

                const formData = new FormData(form);
                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });

                const vehicleID = data.vehicleID;
                delete data.vehicleID;

                fetch(`/api/VehicleInformation/${vehicleID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) throw new Error('Failed to update vehicle information');
                        return response.json();
                    })
                    .then(result => {
                        alert('Vehicle information updated successfully!');
                        console.log(result);
                    })
                    .catch(error => {
                        alert(`Error: ${error.message}`);
                        console.error('Error updating vehicle information:', error);
                    });
            });
        });
        /////////////////////////////////////////////////
        document.addEventListener('DOMContentLoaded', function () {
   
            
            fetch('/api/VehicleInformation')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(responseData => {
          
                    const fleetTableBody = document.querySelector('#vehicleInfoTable tbody');
                    const jsonDataDisplay = document.querySelector('#jsonDataDisplay');

              
                    const vehicleData = responseData.DicOfDT.VehicleInformations;

                 
                    if (Array.isArray(vehicleData)) {
                        vehicleData.forEach(item => {
                     
                            let lastPosition = 'N/A';
                            if (item.LastPosition !== null && item.LastPosition !== "null") {
                                lastPosition = item.LastPosition;
                            }

                            const lastGPSSpeed = item.LastGPSSpeed || 'N/A';
                            const lastAddress = item.LastAddress || 'N/A';
                            const lastGPSTime = item.LastGPSTime ? new Date(item.LastGPSTime).toLocaleString() : 'N/A';

                            
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                                <td>${item.VehicleID}</td>
                                                <td>${item.DriverName}</td>
                                                <td>${item.VehicleMake}</td>
                                                <td>${item.VehicleModel}</td>
                                                <td>${new Date(item.PurchaseDate).toLocaleDateString()}</td>
                                                <td>${lastGPSSpeed}</td>
                                                <td>${lastAddress}</td>
                                                <td>${lastGPSTime}</td>
                                                <td>${lastPosition}</td>
                                                      <td>
                       
                                                     <button type="button" class="btn btn-warning" onclick="openUpdateModal(${item.VehicleID}, '${item.VehicleNumber}', '${item.VehicleType}')"style="background-color: transparent; color: #80FC80; border: none;">
                                    <i class="bi bi-pencil-fill"></i> 
                        </button>
        <button onclick="deleteVehicle(${item.VehicleID})" style="background-color: transparent; color: #FF7F50; border: none;"><i class="bi bi-x-circle-fill"></i></button>



                            </td>
                                            `;
                            fleetTableBody.appendChild(row);
                        });
                    } else {
                        console.error('Expected data to be an array, received:', typeof vehicleData);
                        alert('Data format error: Expected an array of vehicle information.');
                    }
                 

                    jsonDataDisplay.textContent = JSON.stringify(responseData, null, 2);
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('There was an error fetching the vehicle data.');
                });
            function deleteVehicle(vehicleId) {
                fetch(`/api/VehicleInformation/${vehicleId}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => { throw new Error(text || 'Failed to delete vehicle information') });
                        }
                        fetchAndDisplayVehicles(); // Refresh the table
                        alert('Vehicle information deleted successfully!');
                        location.reload(); // Reload to update the table
                    })
                    .catch(error => {
                        alert(`Error: ${error.message}`);
                        console.error('Error deleting vehicle information:', error);
                    });
            }
            /////////////////////////////////////////////////

        
            document.getElementById('addVehicleInfoForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const data = {};
                formData.forEach((value, key) => { data[key] = value; });

                fetch('/api/VehicleInformation/Add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                })
                    .then(response => {
                        if (!response.ok) throw new Error('Network response was not ok');
                        return response.json();
                    })
                    .then(result => {
                        alert('Vehicle Information added successfully!');
                        this.reset();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert(`Failed to add Vehicle Information: ${error.message}`);
                    });
            });
            document.addEventListener('DOMContentLoaded', function () {
                const updateForm = document.getElementById('updateVehicleInfoForm');
                if (updateForm) {
                    updateForm.addEventListener('submit', function (event) {
                        event.preventDefault();
                        const formData = new FormData(updateForm);

                        const data = {
                            vehicleNumber: formData.get('vehicleNumber'),
                            vehicleType: formData.get('vehicleType'),
                            vehicleMake: formData.get('vehicleMake'),
                            vehicleModel: formData.get('vehicleModel'),
                            purchaseDate: formData.get('purchaseDate'),
                            driverID: formData.get('driverID'),
                            driverName: formData.get('driverName'),
                            phoneNumber: formData.get('phoneNumber'),
                                            lastGPSSpeed: formData.get('lastGPSSpeed'),
                                            lastAddress: formData.get('lastAddress'),
                                            lastGPSTime: formData.get('lastGPSTime'),
                                            lastPosition: formData.get('lastPosition')
                            
                                         };

                        const vehicleID = formData.get('vehicleID');

                        fetch(`/api/VehicleInformation/${vehicleID}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Failed to update vehicle information');
                                }
                                return response.json();
                            })
                            .then(result => {
                                alert('Vehicle information updated successfully!');
                                $('#updateVehicleModal').modal('hide');
                                location.reload(); 
                            })
                            .catch(error => {
                                alert(`Error: ${error.message}`);
                                console.error('Error updating vehicle information:', error);
                            });
                    });
                }
            });


        });
    </script>
}